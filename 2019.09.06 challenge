Team OUFO Coding challenges commencing 2019.09.06 (1 week given for completion):


Eamon-> 
> Write a function which compares 2 matrices and checks whether the given smaller matrix 'a' exists within the given larger matrix 'b'.
BONUS POINTS: If the function can determine whether matrix 'a' exists in matrix 'b' but is upside-down or otherwise rotated.
	
---
	
Lavinia->
Write a function which takes 2 arrays of numbers as an input, then calculates the Pearson correlation coefficient for the 2 data sets, returning a value between -1 and 1.

---

Nathan->
Assuming zero rotation at initialization, Write a function which updates the x, y and z position of a rotating object every t seconds, according to the following inputs:
1) Angular velocity of object about x-axis (rad s^-1)
2) Angular velocity of object about y-axis (rad s^-1)
3) A given thrust value (assume constant mass), acting in the direction that object is facing (m s^-2)

---

Luis->
Given any sized matrix of binary values, e.g.:

0,0,0,0,0,0,0,0,0
0,0,0,0,1,1,1,1,0
0,0,0,0,1,0,0,0,0
0,0,0,0,1,0,0,0,0
0,0,0,0,1,1,1,1,0
0,0,0,0,1,0,0,0,0
0,0,0,0,1,0,0,0,0
0,0,0,0,1,1,1,1,0
0,0,0,0,0,0,0,0,0

Write a function which determines whether or not the given matrix displays the capital letter 'E' written in binary '1' values (as shown above- look closely).
BONUS POINTS: If the function can correctly identify when the letter is skewed (i.e. letter 'E' where the lines are different lengths) or slightly distorted.

---

Ilaria->
Given an ordered array of (x,y) coordinates, a constant value for the velocity of a moving object, and an upper limit for the object's speed of rotation:

Write a function which calculates the shortest possible time taken to travel along the length of the curve when passing directly over each point in order (Assume the object begins at full speed)
The object must pass directly over each point and rotation is limited therefore cannot make any quick directional changes.

---

Lee->
Given a matrix of random numbers, along with an additional input of a single constant numerical value, 'diff', write a function which identifies connected rows/columns/diagonals/lines of a given size within the matrix which lay adjacent to rows of numbers which are higher or lower by a factor of 'diff'.
Function returns the start and end coordinates of the line, the average deviation of the selected line from the neighbouring line as a single value, as well as a vector expressing direction of the deviation.
